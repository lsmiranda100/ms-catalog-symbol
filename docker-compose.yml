version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: sigapi-postgres
    environment:
      POSTGRES_DB: aris71adm
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - sigapi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Microservicio MS Catalog Symbol
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ms-catalog-symbol
    ports:
      - "8080:8080"
    environment:
      # Configuraci贸n de Spring Boot
      SPRING_PROFILES_ACTIVE: prod
      
      # Configuraci贸n de base de datos
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/aris71adm
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      
      # Configuraci贸n JPA
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: true
      
      # Configuraci贸n Java
      JAVA_OPTS: "-Xmx512m -Xms256m -XX:+UseG1GC"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - sigapi-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # pgAdmin (opcional, para administrar la base de datos)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: sigapi-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@sigapi.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - sigapi-network
    profiles:
      - admin

volumes:
  postgres_data:
    driver: local

networks:
  sigapi-network:
    driver: bridge


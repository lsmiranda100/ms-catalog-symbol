{
	"info": {
		"_postman_id": "b2c3d4e5-f6a7-4890-b2c3-d4e5f6a78901",
		"name": "MS Catalog Symbol - Health API",
		"description": "Colección de endpoints para health checks y monitoreo del microservicio",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "1. Custom Health Check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Service is UP\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('UP');",
							"});",
							"",
							"pm.test(\"Has service name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.service).to.eql('ms-catalog-symbol');",
							"});",
							"",
							"pm.test(\"Has version\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.version).to.exist;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/health",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"health"
					]
				},
				"description": "Health check personalizado del microservicio con información detallada"
			},
			"response": []
		},
		{
			"name": "2. Hello World",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains greeting\", function () {",
							"    pm.expect(pm.response.text()).to.include('Hola');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/hello",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"hello"
					]
				},
				"description": "Endpoint de saludo básico para verificar que el servicio responde"
			},
			"response": []
		},
		{
			"name": "3. Actuator Health",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status is UP\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('UP');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/actuator/health",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"actuator",
						"health"
					]
				},
				"description": "Health check estándar de Spring Boot Actuator"
			},
			"response": []
		},
		{
			"name": "4. Actuator Info",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/actuator/info",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"actuator",
						"info"
					]
				},
				"description": "Información de la aplicación desde Spring Boot Actuator"
			},
			"response": []
		},
		{
			"name": "5. Actuator Metrics",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/actuator/metrics",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"actuator",
						"metrics"
					]
				},
				"description": "Lista de métricas disponibles del microservicio"
			},
			"response": []
		},
		{
			"name": "6. Swagger UI",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/swagger-ui.html",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"swagger-ui.html"
					]
				},
				"description": "Acceso a la documentación interactiva Swagger UI (abre en navegador)"
			},
			"response": []
		},
		{
			"name": "7. OpenAPI Docs JSON",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api-docs",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api-docs"
					]
				},
				"description": "Documentación OpenAPI en formato JSON"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}


